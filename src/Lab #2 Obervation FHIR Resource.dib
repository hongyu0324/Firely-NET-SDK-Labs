#!meta

{"kernelInfo":{"defaultKernelName":"csharp","items":[{"name":"csharp","languageName":"C#","aliases":["c#","cs"]},{"name":"fsharp","languageName":"F#","aliases":["f#","fs"]},{"name":"html","languageName":"HTML"},{"name":"http","languageName":"HTTP"},{"name":"javascript","languageName":"JavaScript","aliases":["js"]},{"name":"kql","languageName":"KQL"},{"name":"mermaid","languageName":"Mermaid"},{"name":"pwsh","languageName":"PowerShell","aliases":["powershell"]},{"name":"sql","languageName":"SQL"},{"name":"value"}]}}

#!markdown

#### 課程二：Observation Resource介紹

##### 1. 簡介
##### 課程目標：了解如何產生Obaservation資料，整合既有之Code System標準(如LOINC)並透過ResourceReference連結Patient與Observation資料

#!csharp

#r "nuget:hl7.fhir.r4"

#!csharp

using Hl7.Fhir.Model; 
using Hl7.Fhir.Rest;
var client = new FhirClient("http://localhost:8080/fhir");

#!markdown

##### 2 從FHIR server讀取資料
##### 2.1 讀取全部資料(假設Effective日期皆為1900後)

#!csharp

var q = new SearchParams().Where("date=gt1900").LimitTo(10).OrderBy("date",SortOrder.Descending);
Bundle observations = await client.SearchAsync<Observation>(q);

foreach (var o in observations.Entry){
    var r = (Observation)o.Resource;
    Console.WriteLine( r.Effective + " " + r.Category[0].Coding[0].Code + " " + r.Code.Coding[0].System + " " +r.Code.Coding[0].Code);
} 

#!markdown

##### 3. 產生Observation紀錄
##### 練習：患者體重為 85 公斤，請使用上面的溫度範例添加此資訊作為觀察結果（使用vital-signs structure definition、vital sign result types和vital signs units）。

#!csharp

var observation = new Observation();
observation.Status = Hl7.Fhir.Model.ObservationStatus.Preliminary;
var category = new CodeableConcept();
var coding = new CodeableConcept();
var o_value = new Hl7.Fhir.Model.Quantity();

category.Add("http://hl7.org/fhir/observation-category","vital-signs");
observation.Category.Add(category);
coding.Add("http://loinc.org","29463-7","Body weight");
observation.Code = coding;
observation.Effective = new FhirDateTime("2023-04-19");
o_value.Value = 85;
o_value.System = "http://unitsofmeasure.org";
o_value.Code = "kg";
observation.Value = o_value;

#!markdown

##### 4.透過FHIR Search取的FHIR Server既有之Patient資料

#!csharp

var q = new SearchParams().Where("name=王");
Bundle result = await client.SearchAsync<Patient>(q);

var patient = new Patient();
patient = (Patient)result.Entry[0].Resource;
Console.WriteLine(patient.Id);

#!markdown

##### 5. 使用ResourceReference將Patient與Observation連結在一起

#!csharp

var rr = new ResourceReference("Patient/" + patient.Id);

observation.Subject = new ResourceReference("Patient/" + patient.Id);

#!csharp

using Hl7.Fhir.Serialization;

// create a FHIR JSON serializer, using pretty-printing (nice formatting)
FhirJsonSerializer serializer = new FhirJsonSerializer(new SerializerSettings()
{
    Pretty = true,
});
string obs_Json = serializer.SerializeToString(observation);

#!csharp

obs_Json

#!csharp

var created = await client.CreateAsync<Observation>(observation);

#!markdown

##### 6. 驗證相關資料

#!csharp

// search for the created observation with the patient id
var q = new SearchParams().Where("patient=" + patient.Id);
Bundle observations = await client.SearchAsync<Observation>(q);

foreach (var o in observations.Entry){
    var r = (Observation)o.Resource;
    Console.WriteLine( r.Effective + " " + r.Category[0].Coding[0].Code + " " + r.Code.Coding[0].System + " " +r.Code.Coding[0].Code);
}
