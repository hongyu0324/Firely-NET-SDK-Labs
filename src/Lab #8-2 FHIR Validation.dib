#!meta

{"kernelInfo":{"defaultKernelName":null,"items":[{"name":"csharp","languageName":"C#","aliases":["c#","cs"]},{"name":"fsharp","languageName":"F#","aliases":["f#","fs"]},{"name":"pwsh","languageName":"PowerShell","aliases":["powershell"]},{"name":"javascript","languageName":"JavaScript","aliases":["js"]},{"name":"html","languageName":"HTML"},{"name":"sql","languageName":"SQL"},{"name":"kql","languageName":"KQL"},{"name":"mermaid","languageName":"Mermaid"},{"name":"http","languageName":"HTTP"},{"name":"value"}]}}

#!csharp

#r "nuget:Firely.Fhir.Validation"
#r "nuget:Firely.Fhir.Validation.R4"
#r "nuget:Firely.Fhir.Validation.Compilation"
#r "nuget:hl7.fhir.r4"
#r "nuget:Firely.Fhir.Packages"

#!csharp

using Firely.Fhir.Packages;
using Firely.Fhir.Validation;
using Hl7.Fhir.Model;
using Hl7.Fhir.Rest;
using Hl7.Fhir.Serialization;
using Hl7.Fhir.Specification;
using Hl7.Fhir.Specification.Source;
using Hl7.Fhir.Specification.Terminology;
using Hl7.Fhir.Support;
using Hl7.Fhir.Utility;
using System.IO;

#!csharp

var packageSource = FhirPackageSource.CreateCorePackageSource(ModelInfo.ModelInspector, FhirRelease.R4, "https://packages.simplifier.net");
IAsyncResourceResolver  _coreSource = new CachedResolver(packageSource);
var directorySource1 = new CachedResolver(new DirectorySource("D:\\Hongyu\\Project\\data\\profiles\\tw-core-ig\\v0.3.2\\package",
                            new DirectorySourceSettings { IncludeSubDirectories = true }));
                            
var directorySource2 = new CachedResolver(new DirectorySource("D:\\Hongyu\\Project\\data\\profiles\\EMR\\package",
                            new DirectorySourceSettings { IncludeSubDirectories = true }));

var profileSource = new MultiResolver(directorySource1,directorySource2, _coreSource);

var terminologySource = new LocalTerminologyService(profileSource);

var validator = new Validator(profileSource, terminologySource);

#!csharp

// read patient resource from file
var patientJson = File.ReadAllText("D:\\Hongyu\\Project\\data\\fhir-example\\Patient-pat-example.json");

var patient = new FhirJsonParser().Parse<Resource>(patientJson) as Patient;

#!csharp

var result = validator.Validate(patient);
foreach (var issue in result.Issue)
{
    Console.WriteLine($"{issue.Severity} - {issue.Details.Text}");
}

#!csharp

result

#!csharp

// print profile url
foreach (var profile in patient.Meta.Profile)
{
    Console.WriteLine(profile);
}

#!csharp

var profile = "https://twcore.mohw.gov.tw/ig/twcore/StructureDefinition/Patient-twcore";
result = validator.Validate(patient, profile);
foreach (var issue in result.Issue)
{
    Console.WriteLine($"{issue.Severity} - {issue.Details.Text}");
}

#!csharp

// read a bundle object from a file
var esBuldle = File.ReadAllText("D:\\Hongyu\\Project\\data\\fhir-example\\ep\\處方箋1130509.txt");

var bundle = new FhirJsonParser().Parse<Bundle>(esBuldle);

var result = validator!.Validate(bundle);

// print the result 
foreach (var issue in result.Issue)
{
    Console.WriteLine($"{issue.Severity} - {issue.Details.Text}");
}

// Validate each resource in the bundle
foreach (var entry in bundle.Entry)
{
    var resource = entry.Resource;
    var resourceResult = validator!.Validate(resource);
    foreach (var issue in resourceResult.Issue)
    {
        Console.WriteLine($"{issue.Severity} - {issue.Details.Text}");
    }
}
