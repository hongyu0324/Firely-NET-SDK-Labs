#!meta

{"kernelInfo":{"defaultKernelName":"csharp","items":[{"aliases":[],"name":"csharp"}]}}

#!csharp

#r "nuget:hl7.fhir.r4"

#!csharp

using Hl7.Fhir.Model; 
using Hl7.Fhir.Rest;
using Hl7.Fhir.Serialization;
using Hl7.Fhir.FhirPath;
using Hl7.Fhir.ElementModel;
using Hl7.Fhir.Specification;
using Hl7.Fhir.Specification.Source;
using System.IO;

var client = new FhirClient("https://hapi-kky3mvnabq-de.a.run.app/fhir");
var pathEP = "D:\\Hongyu\\Project\\data\\fhir-example\\ep\\";

#!csharp

//read data from "D:\Hongyu\Project\data\fhir-example\ep\Organization-org.json"
var json = File.ReadAllText(pathEP + "Organization-org.json");
var parser = new FhirJsonParser();
var org = parser.Parse<Organization>(json);

//create a new resource
var orgResponse = await client.CreateAsync<Organization>(org);
var orgId = orgResponse.Id;

//print the Organization name and Id
Console.WriteLine("Orgination name :"+ org.Name);
Console.WriteLine("Orgination id :" + orgId);

#!csharp

//read data from "D:\Hongyu\Project\data\fhir-example\ep\Practitioner-pra.json"

var praFile = pathEP + "Practitioner-pra.json";
var pra = new Practitioner();
json = File.ReadAllText(praFile);

// parsing Practitioner Data from json
pra = parser.Parse<Practitioner>(json);

//save Practitioner Data to FHIR Server
var praResponse = await client.CreateAsync<Practitioner>(pra);
var praId = praResponse.Id;

//printing Practitioner name and Id
Console.WriteLine("Practitioner Name: " + pra.Name[0].Text);
Console.WriteLine("Practitioner Id: " + praId);

#!csharp

//read Patient Data from "D:\Hongyu\Project\data\fhir-example\ep\Patient-pat.json"
var patientFile = pathEP + "Patient-pat.json";
var pat = new Patient();
json = File.ReadAllText(patientFile);

// parsing Pateint Data from json
pat = parser.Parse<Patient>(json);

//save patient data to server
var patResponse = await client.CreateAsync<Patient>(pat);

//keep the patient Id
var patId = patResponse.Id;

//printing Patient name and Id
Console.WriteLine(patResponse.Id);
Console.WriteLine("Patient Name: " + pat.Name[0].Text);

#!csharp

//read data from "D:\Hongyu\Project\data\fhir-example\ep\Observation-obs.json"

var obsFile = pathEP + "Observation-obs.json";
var obs = new Observation();
json = File.ReadAllText(obsFile);

// parsing Observation Data from json
obs = parser.Parse<Observation>(json);

//printing Observation Data
Console.WriteLine(obs.Code.Coding[0].Display);

//replace the reference with the actual Id
obs.Subject.Reference = "Patient/" + patId;
obs.Performer[0].Reference = "Practitioner/" + praId;

//save observation data to server
var obsResponse = await client.CreateAsync<Observation>(obs);
Console.WriteLine(obsResponse.Id);

#!csharp

//read data from "D:\Hongyu\Project\data\fhir-example\ep\Encounter-enc.json"

var encFile = pathEP + "Encounter-enc.json";
var enc = new Encounter();
json = File.ReadAllText(encFile);

// parsing Encounter Data from json
enc = parser.Parse<Encounter>(json);

//replace the reference with the actual Id
enc.Subject.Reference = "Patient/" + patId;

//save Encounter data to server
var encResponse = await client.CreateAsync<Encounter>(enc);
Console.WriteLine(encResponse.Id);

// save the reference Ids
var encId = encResponse.Id;

#!csharp

//read data from "D:\Hongyu\Project\data\fhir-example\ep\Condition-con.json"

var conFile = pathEP + "Condition-con.json";
var con = new Condition();
json = File.ReadAllText(conFile);

// parsing Condition Data from json
con = parser.Parse<Condition>(json);

//printing Condition Data
Console.WriteLine(con.Code.Coding[0].Display);

//replace the reference with the actual Id
con.Subject.Reference = "Patient/" + patId;

//save Condition data to server
var conResponse = await client.CreateAsync<Condition>(con);
Console.WriteLine(conResponse.Id);

#!csharp

//read data from "D:\Hongyu\Project\data\fhir-example\ep\Medication-med-1.json"

var medFile = pathEP + "Medication-med-01.json";
var med = new Medication();
json = File.ReadAllText(medFile);

// parsing Medication Data from json
med = parser.Parse<Medication>(json);

//save Medication data to server
var medResponse = await client.CreateAsync<Medication>(med);
Console.WriteLine(medResponse.Id);

//keep the reference Id
var medId = medResponse.Id;

#!csharp

//read data from "D:\Hongyu\Project\data\fhir-example\ep\coverage.json"

var covFile = pathEP + "Coverage-cov.json";
var cov = new Coverage();
json = File.ReadAllText(covFile);

// parsing Coverage Data from json
cov = parser.Parse<Coverage>(json);

//replace the reference with the actual Id
cov.Beneficiary.Reference = "Patient/" + patId;
cov.Payor[0].Reference = "Patient/" + patId;

//save Coverage data to server
var covResponse = await client.CreateAsync<Coverage>(cov);
Console.WriteLine(covResponse.Id);

//keep the reference Id
var covId = covResponse.Id;

#!csharp

//read data from "D:\Hongyu\Project\data\fhir-example\ep\MedicationRequest-med-req-1.json"

var medReqFile = pathEP + "MedicationRequest-med-req-01.json";
var medReq = new MedicationRequest();
json = File.ReadAllText(medReqFile);

// parsing MedicationRequest Data from json
medReq = parser.Parse<MedicationRequest>(json);

//replace the reference with the actual Id
medReq.Subject.Reference = "Patient/" + patId;
medReq.Insurance[0].Reference = "Coverage/" + covId;
//medReq.Encounter.Reference = "Encounter/" + encId;

//new reference object
medReq.Medication = new ResourceReference("Medication/" + medId);

//save MedicationRequest data to server
var medReqResponse = await client.CreateAsync<MedicationRequest>(medReq);
Console.WriteLine(medReqResponse.Id);
