#!meta

{"kernelInfo":{"defaultKernelName":null,"items":[{"name":"csharp","languageName":"C#","aliases":["c#","cs"]},{"name":"fsharp","languageName":"F#","aliases":["f#","fs"]},{"name":"pwsh","languageName":"PowerShell","aliases":["powershell"]},{"name":"javascript","languageName":"JavaScript","aliases":["js"]},{"name":"html","languageName":"HTML"},{"name":"sql","languageName":"SQL"},{"name":"kql","languageName":"KQL"},{"name":"mermaid","languageName":"Mermaid"},{"name":"http","languageName":"HTTP"},{"name":"value"}]}}

#!csharp

#r "nuget:hl7.fhir.r4"

#!csharp

// read fhir data from D:\Hongyu\Project\data\synthea-data\fhir directory

using Hl7.Fhir.Model;
using Hl7.Fhir.Rest;

var client = new FhirClient("http://localhost:8080/fhir");

#!csharp

using System.IO;
using Hl7.Fhir.Serialization;


var path = @"D:\Hongyu\Project\data\synthea-data\fhir";
var files = Directory.GetFiles(path, "*.json");
var parser = new FhirJsonParser();

foreach (var file in files)
{
    if (file.Contains("hospital") || file.Contains("practitioner")){
        try
        {
            Bundle bundle = parser.Parse<Bundle>(File.ReadAllText(file));

            var response = client.Transaction(bundle);

            Console.WriteLine($"Processed {file}");
        }
        catch (Exception e)
        {
            Console.WriteLine($"Error processing {file}: {e.Message}");
        }
    }
}


foreach (var file in files)
{
    if (file.Contains("hospital")){
        continue;
    }
    if (file.Contains("practitioner")){
        continue;
    }
    try
    {
        Bundle bundle = parser.Parse<Bundle>(File.ReadAllText(file));

        var response = client.Transaction(bundle);

        Console.WriteLine($"Processed {file}");
    }
    catch (Exception e)
    {
        Console.WriteLine($"Error processing {file}: {e.Message}");
    }
   
}
